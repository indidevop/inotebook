{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amey Sawalkar\\\\Desktop\\\\React\\\\inotebook\\\\src\\\\contexts\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport NoteContext from \"./noteContext\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const notesInitial = [];\n  const [notes, setnotes] = useState(notesInitial);\n\n  // Get All Notes\n  const fetchallNotes = async () => {\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: \"GET\",\n      headers: {\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjNlOGU4NWExYmJhNWM1Y2Y5MmU2YWYwIn0sImlhdCI6MTY3NjIxODc0OX0.pZUMLGHz98KnIComESUChvtGtrI8eiV05e-2FFPS6l8\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n  };\n\n  // Add Note\n  const addNote = async (title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjNlOGU4NWExYmJhNWM1Y2Y5MmU2YWYwIn0sImlhdCI6MTY3NjIxODc0OX0.pZUMLGHz98KnIComESUChvtGtrI8eiV05e-2FFPS6l8\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    let note = {\n      \"_id\": \"63e91df9dc397354edde0438\",\n      \"user\": \"63e8e85a1bba5c5cf92e6af0\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": \"default\",\n      \"date\": \"2023-02-12T17:11:21.829Z\",\n      \"__v\": 0\n    };\n    setnotes(notes.concat(note));\n  };\n  const deleteNote = id => {\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setnotes(newNotes);\n  };\n\n  // Edit Note\n  const editNote = async (id, title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"POST\",\n      headers: {\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjNlOGU4NWExYmJhNWM1Y2Y5MmU2YWYwIn0sImlhdCI6MTY3NjIxODc0OX0.pZUMLGHz98KnIComESUChvtGtrI8eiV05e-2FFPS6l8\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(title, description, tag)\n    });\n    const json = response.json();\n    for (const key in notes) {\n      if (notes[key]._id === id) {\n        notes[key].title = title;\n        notes[key].description = description;\n        notes[key].tag = tag;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote,\n      fetchallNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"17KTT0fQ15Y6l1fhXF3AS0rkCqo=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["NoteContext","useState","NoteState","props","host","notesInitial","notes","setnotes","fetchallNotes","response","fetch","method","headers","json","console","log","addNote","title","description","tag","body","JSON","stringify","note","concat","deleteNote","id","newNotes","filter","_id","editNote","key","children"],"sources":["C:/Users/Amey Sawalkar/Desktop/React/inotebook/src/contexts/notes/NoteState.js"],"sourcesContent":["import NoteContext from \"./noteContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst NoteState = (props) => {\r\n\r\n  const host = \"http://localhost:5000\"\r\n\r\n\r\n  const notesInitial = [];\r\n\r\n  const [notes, setnotes] = useState(notesInitial);\r\n\r\n// Get All Notes\r\nconst fetchallNotes = async () => {\r\n\r\n  const response = await fetch(`${host}/api/notes/fetchallnotes`,\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjNlOGU4NWExYmJhNWM1Y2Y5MmU2YWYwIn0sImlhdCI6MTY3NjIxODc0OX0.pZUMLGHz98KnIComESUChvtGtrI8eiV05e-2FFPS6l8\",\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n\r\n    const json=await response.json();\r\n    console.log(json);\r\n\r\n}\r\n\r\n  // Add Note\r\n  const addNote = async (title, description,tag) => {\r\n\r\n    const response = await fetch(`${host}/api/notes/addnote`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjNlOGU4NWExYmJhNWM1Y2Y5MmU2YWYwIn0sImlhdCI6MTY3NjIxODc0OX0.pZUMLGHz98KnIComESUChvtGtrI8eiV05e-2FFPS6l8\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify({title,description,tag}),\r\n      })\r\n      const json=response.json();\r\n\r\n\r\n    let note = {\r\n      \"_id\": \"63e91df9dc397354edde0438\",\r\n      \"user\": \"63e8e85a1bba5c5cf92e6af0\",\r\n      \"title\": title,\r\n      \"description\": description,\r\n      \"tag\": \"default\",\r\n      \"date\": \"2023-02-12T17:11:21.829Z\",\r\n      \"__v\": 0\r\n    }\r\n\r\n    setnotes(notes.concat(note))\r\n  }\r\n\r\n  const deleteNote = (id) => {\r\n\r\n    const newNotes = notes.filter((note) => { return note._id !== id });\r\n    setnotes(newNotes);\r\n  }\r\n\r\n  // Edit Note\r\n  const editNote = async (id, title, description, tag) => {\r\n\r\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjNlOGU4NWExYmJhNWM1Y2Y5MmU2YWYwIn0sImlhdCI6MTY3NjIxODc0OX0.pZUMLGHz98KnIComESUChvtGtrI8eiV05e-2FFPS6l8\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify(title, description, tag),\r\n      })\r\n      const json=response.json();\r\n\r\n      for (const key in notes) {\r\n         if(notes[key]._id===id)\r\n         {\r\n          notes[key].title=title;\r\n          notes[key].description=description;\r\n          notes[key].tag=tag;\r\n         }\r\n      }\r\n\r\n  }\r\n\r\n  return (\r\n    <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote, fetchallNotes }}>\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  )\r\n}\r\n\r\nexport default NoteState;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}